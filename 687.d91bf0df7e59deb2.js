"use strict";(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[687],{7687:(o,h,n)=>{n.r(h),n.d(h,{EditionReportModule:()=>v});var s=n(655),e=n(5e3),S=n(2016),D=n(9875),f=n(6666),x=n(8920);let r=class{constructor(){this.openModalRequest=new e.vpe,this.ref=this}openModal(t){!t||this.openModalRequest.emit(t)}};r.ctorParameters=()=>[],r.propDecorators={sourceListData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}]},r=(0,s.gn)([(0,e.wA2)({selector:"awg-source-list",template:f,changeDetection:e.n4l.OnPush,styles:[x]})],r);var b=n(367),y=n(4545),g=n(3610);let a=class{constructor(){this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.FIRM_SIGNS={OP12:{A:[g.w8.FIRM_JE_NO_9_LIN_28]},OP25:{A:[g.w8.FIRM_JE_NO_15_LIN_16],C:[g.w8.FIRM_JE_NO_3_LIN_14]}},this.ref=this}openModal(t){!t||this.openModalRequest.emit(t)}selectSvgSheet(t){!t||this.selectSvgSheetRequest.emit(t)}};a.ctorParameters=()=>[],a.propDecorators={sourceDescriptionListData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},a=(0,s.gn)([(0,e.wA2)({selector:"awg-source-description",template:b,changeDetection:e.n4l.OnPush,styles:[y]})],a);var w=n(5479),M=n(6101);let c=class{constructor(){this.navigateToReportFragmentRequest=new e.vpe,this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.ref=this}navigateToReportFragment(t){!t||this.navigateToReportFragmentRequest.emit(t)}openModal(t){!t||this.openModalRequest.emit(t)}selectSvgSheet(t){!t||this.selectSvgSheetRequest.emit(t)}};c.ctorParameters=()=>[],c.propDecorators={sourceEvaluationListData:[{type:e.IIB}],navigateToReportFragmentRequest:[{type:e.r_U}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},c=(0,s.gn)([(0,e.wA2)({selector:"awg-source-evaluation",template:w,changeDetection:e.n4l.OnPush,styles:[M]})],c);var E=n(7986),I=n(1047);let l=class{constructor(){this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.ref=this}openModal(t){this.openModalRequest.emit(t)}selectSvgSheet(t){this.selectSvgSheetRequest.emit(t)}isNotEmptyArray(t){return t&&t.constructor===Array&&t.length>0}};l.ctorParameters=()=>[],l.propDecorators={textcriticsData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},l=(0,s.gn)([(0,e.wA2)({selector:"awg-textcritics-list",template:E,styles:[I]})],l);var d=n(1591),L=n(2792),C=n(9286),F=n(515),R=n(6900),P=n(3900),A=n(262);let p=class{constructor(t,u,O){this.editionDataService=t,this.editionService=u,this.router=O,this.errorObject=null,this.titles={sourceList:"1. Quellen\xfcbersicht",sourceDescription:"2. Quellenbeschreibung",sourceEvaluation:"3. Quellenbewertung",tka:"4. Textkritische Anmerkungen"}}ngOnInit(){this.getEditionReportData()}getEditionReportData(){this.editionReportData$=this.editionService.getEditionWork().pipe((0,P.w)(t=>(this.editionWork=t,this.editionDataService.getEditionReportData(this.editionWork))),(0,A.K)(t=>(this.errorObject=t,F.E)))}onReportFragmentNavigate(t){t||(t="");const u={fragment:t};this.router.navigate([this.editionWork.baseRoute,this.editionWork.reportRoute.route],u)}onSvgSheetSelect(t){t||(t="");const u={queryParams:{sketch:t}};this.router.navigate([this.editionWork.baseRoute,this.editionWork.sheetsRoute.route],u)}};p.ctorParameters=()=>[{type:R.K},{type:R.O},{type:d.F0}],p=(0,s.gn)([(0,e.wA2)({selector:"awg-edition-report",template:L,changeDetection:e.n4l.OnPush,styles:[C]})],p);const T=[{path:"",component:p,data:{title:"AWG Online Edition \u2013 Report"}}],q=[p];let m=class{};m=(0,s.gn)([(0,e.LVF)({imports:[d.Bz.forChild(T)],exports:[d.Bz]})],m);let v=class{};v=(0,s.gn)([(0,e.LVF)({imports:[S.m,D.K,m],declarations:[l,a,c,r,q]})],v)},9286:o=>{o.exports=""},4545:o=>{o.exports=""},6101:o=>{o.exports=""},8920:o=>{o.exports=""},1047:o=>{o.exports=""},2792:o=>{o.exports='\x3c!-- content: edition report --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    <ngb-accordion\n        id="reportAcc"\n        #reportAcc="ngbAccordion"\n        activeIds="awg-source-list, awg-source-desc, awg-source-evaluation, awg-tka-panel"\n        *ngIf="editionReportData$ | async as editionReportData">\n        \x3c!-- source list --\x3e\n        <ngb-panel id="awg-source-list" [title]="titles.sourceList">\n            <ng-template ngbPanelContent>\n                <awg-source-list\n                    *ngIf="editionReportData[0]"\n                    [sourceListData]="editionReportData[0]"\n                    (openModalRequest)="modal.open($event)">\n                </awg-source-list>\n            </ng-template>\n        </ngb-panel>\n\n        \x3c!-- source description --\x3e\n        <ngb-panel id="awg-source-desc" [title]="titles.sourceDescription">\n            <ng-template ngbPanelContent>\n                <awg-source-description\n                    *ngIf="editionReportData[1]"\n                    [sourceDescriptionListData]="editionReportData[1]"\n                    (openModalRequest)="modal.open($event)"\n                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                </awg-source-description>\n            </ng-template>\n        </ngb-panel>\n\n        \x3c!-- source evaluation --\x3e\n        <ngb-panel id="awg-source-evaluation" [title]="titles.sourceEvaluation">\n            <ng-template ngbPanelContent>\n                <awg-source-evaluation\n                    *ngIf="editionReportData[2]"\n                    [sourceEvaluationListData]="editionReportData[2]"\n                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                    (openModalRequest)="modal.open($event)"\n                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                </awg-source-evaluation>\n            </ng-template>\n        </ngb-panel>\n\n        \x3c!-- text critics --\x3e\n        <ngb-panel id="awg-tka-panel" [title]="titles.tka">\n            <ng-template ngbPanelContent>\n                <awg-textcritics-list\n                    *ngIf="editionReportData[3]"\n                    [textcriticsData]="editionReportData[3]"\n                    (openModalRequest)="modal.open($event)"\n                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                </awg-textcritics-list>\n            </ng-template>\n        </ngb-panel>\n    </ngb-accordion>\n    \x3c!-- END accordion --\x3e\n</div>\n'},367:o=>{o.exports='<div class="awg-source-description-list" *ngIf="sourceDescriptionListData">\n    <div\n        class="awg-source-description para"\n        *ngFor="let sourceDescription of sourceDescriptionListData.sources"\n        [id]="sourceDescription.id">\n        <p *ngIf="sourceDescription.siglum" class="awg-source-description-siglum bold">\n            {{ sourceDescription.siglum }}\n        </p>\n        <p *ngIf="sourceDescription.type" class="awg-source-description-type">\n            {{ sourceDescription.type }}\n        </p>\n        <p *ngIf="sourceDescription.location" class="awg-source-description-location">\n            {{ sourceDescription.location }}\n        </p>\n        <div *ngIf="sourceDescription.description">\n            <p\n                class="awg-source-description-entry"\n                *ngFor="let description of sourceDescription.description"\n                [compile-html]="description"\n                [compile-html-ref]="this"></p>\n        </div>\n    </div>\n</div>\n'},5479:o=>{o.exports='<div class="awg-source-evaluation-list para" *ngIf="sourceEvaluationListData">\n    <p\n        class="awg-source-evaluation-entry"\n        *ngFor="let evaluation of sourceEvaluationListData.sources[0].content"\n        [compile-html]="evaluation"\n        [compile-html-ref]="this"></p>\n</div>\n'},6666:o=>{o.exports='<table aria-label="Table for list of sources" class="table table-hover borderless">\n    <tbody>\n        \x3c!--  at the moment only for the first item ("source.siglum == \'A\'") --\x3e\n        <tr *ngFor="let source of sourceListData.sources; let sourceIndex = index">\n            <th scope="row">\n                <ng-container *ngIf="source.hasDescription === true; else modalHint">\n                    <a [routerLink]="[\'./\']" fragment="{{ source.linkTo }}" [innerHTML]="source.siglum"></a>\n                </ng-container>\n                <ng-template #modalHint>\n                    <a (click)="openModal(source.linkTo)" [innerHTML]="source.siglum"></a>\n                </ng-template>\n            </th>\n            <td>\n                <span [compile-html]="source.type" [compile-html-ref]="ref"></span> <br />\n                <span class="text-muted" [innerHTML]="source.location"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n'},7986:o=>{o.exports='<ngb-accordion #textCriticsAcc="ngbAccordion" id="textCriticsAcc" *ngIf="textcriticsData">\n    <ngb-panel *ngFor="let textcritic of textcriticsData.textcritics" [id]="textcritic.id">\n        <ng-template ngbPanelHeader>\n            <div class="accordion-button awg-accordion-button-custom-header justify-content-between">\n                <button ngbPanelToggle class="p-0 btn btn-link text-start">{{ textcritic.label }}</button>\n                <button type="button" class="btn btn-sm btn-outline-info" (click)="selectSvgSheet(textcritic.id)">\n                    Zur Transkription\n                </button>\n            </div>\n        </ng-template>\n        <ng-template ngbPanelContent>\n            <div *ngIf="isNotEmptyArray(textcritic.description)">\n                <p class="caps">Skizzenkommentar:</p>\n                <p\n                    *ngFor="let description of textcritic.description"\n                    [compile-html]="description"\n                    [compile-html-ref]="ref"></p>\n            </div>\n            <div *ngIf="isNotEmptyArray(textcritic.comments)">\n                <p class="caps">Textkritischer Kommentar:</p>\n                <awg-edition-tka-table\n                    [textcriticalComments]="textcritic.comments"\n                    (openModalRequest)="openModal($event)"\n                    (selectSvgSheetRequest)="selectSvgSheet($event)">\n                </awg-edition-tka-table>\n            </div>\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n'}}]);